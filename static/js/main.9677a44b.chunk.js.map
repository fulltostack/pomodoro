{"version":3,"sources":["containers/app.module.css","modules/pomodoro/components/Counter/styles.module.css","modules/pomodoro/components/Digit/styles.module.css","modules/pomodoro/components/ClockDivider/styles.module.css","modules/pomodoro/components/Timer/styles.module.css","modules/pomodoro/components/Label/styles.module.css","modules/pomodoro/components/BottomActionBar/styles.module.css","modules/pomodoro/styles.module.css","containers/App.jsx","modules/pomodoro/components/Counter/index.jsx","modules/pomodoro/components/Digit/index.jsx","modules/pomodoro/components/ClockDivider/index.jsx","modules/pomodoro/components/Timer/index.jsx","modules/pomodoro/components/Label/index.jsx","modules/pomodoro/actions/constants.js","modules/pomodoro/components/BottomActionBar/index.jsx","modules/pomodoro/actions/index.js","modules/pomodoro/index.jsx","routes/index.jsx","constants/Routes.js","modules/pomodoro/reducer/index.js","reducers/index.js","store/index.js","modules/startup/sagas/startupSaga.js","sagas/index.js","index.js"],"names":["module","exports","App","props","className","style","mainBodyStyle","children","styles","require","Counter","label","value","increment","decrement","container","counterContainer","buttonWrapper","button","onClick","valueWrapper","Digit","Divider","divider","topDot","bottomDot","Timer","minutes","Math","floor","seconds","toString","length","numberOfDigitsInMinute","timeContainer","digitContainer","Array","keys","map","index","key","Label","timerState","pomodoroState","string","statRow","stats","BottomActionBar","btns","onStart","stop","onStop","onClear","updateSessionLength","byAmount","type","updateBreakLength","Pomodoro","this","timer","setInterval","secondsRemaining","switchPomodoroState","updateSeconds","clearInterval","pomodoro","sessionLength","incrementSessionLength","decrementSessionLength","breakLength","incrementBreakLength","decrementBreakLength","start","clear","React","connect","state","dispatch","updateSecondsRemaining","path","component","from","to","initialState","hasSessionValueChanged","reducers","action","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","startup","appStarting","console","log","call","root","fork","run","runRootSaga","ReactDOM","history","createHistory","routes","document","getElementById"],"mappings":"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","file":"static/js/main.9677a44b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBodyStyle\":\"app_mainBodyStyle__1Wwtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3m_jZ\",\"label\":\"styles_label__I3lAx\",\"counterContainer\":\"styles_counterContainer__34rrf\",\"buttonWrapper\":\"styles_buttonWrapper__2DT-z\",\"button\":\"styles_button__3Aibx\",\"valueWrapper\":\"styles_valueWrapper__2KbQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2cwAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"styles_divider__3vI6K\",\"topDot\":\"styles_topDot__3Z7rI\",\"bottomDot\":\"styles_bottomDot__38ZmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3ucRO\",\"digitContainer\":\"styles_digitContainer__2vftK\",\"timeContainer\":\"styles_timeContainer__1sCta\",\"divider\":\"styles_divider__2cn5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statRow\":\"styles_statRow__CFV0_\",\"stats\":\"styles_stats__3OT5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1Zgqq\",\"btns\":\"styles_btns__mrPDU\",\"button\":\"styles_button__1Gmf2\",\"stop\":\"styles_stop__19rKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pomodoro\":\"styles_pomodoro__2RxZH\",\"counterContainer\":\"styles_counterContainer__1jBAW\",\"label\":\"styles_label__3GAmu\",\"flip-clock-wrapper\":\"styles_flip-clock-wrapper__2ABko\",\"subContainer\":\"styles_subContainer__9VqP1\",\"colMd\":\"styles_colMd__LX1NW\",\"counter\":\"styles_counter__J5ycM\",\"clock\":\"styles_clock__1-ou8\",\"container\":\"styles_container__rZYao\",\"middle\":\"styles_middle__3GJwd\",\"btns\":\"styles_btns__16gRb\",\"stop\":\"styles_stop__3Vfam\",\"button\":\"styles_button__1-hIZ\",\"stats\":\"styles_stats__I-0-7\",\"statRow\":\"styles_statRow__AncGi\"};","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './app.module.css'\n\nconst App = props => (\n  <div className={style.mainBodyStyle} >\n    {props.children}\n  </div>\n);\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default App;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = require('./styles.module.css');\n\nconst Counter = ({ label, value, increment, decrement }) => (\n  <div className={styles.container}>\n    <p className={styles.label}>{label}</p>\n    <div className={styles.counterContainer}>\n      <div className={`col-md-4 ${styles.buttonWrapper}`}>\n        <button className={`btn btn-default ${styles.button}`} onClick={decrement}>-</button>\n      </div>\n      <div className={`col-md-2 ${styles.valueWrapper}`}>\n        <div>{value}</div>\n      </div>\n      <div className={`col-md-4 ${styles.buttonWrapper}`}>\n        <button className={`btn btn-default ${styles.button}`} onClick={increment}>+</button>\n      </div>\n    </div>\n  </div>\n);\n\nCounter.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  increment: PropTypes.func.isRequired,\n  decrement: PropTypes.func.isRequired,\n};\n\nexport default Counter;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = require('./styles.module.css');\n\nconst Digit = ({ value }) => (\n  <div className={styles.container}>\n    <div>{value}</div>\n  </div>\n);\n\nDigit.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nexport default Digit;\n","import * as React from 'react';\n\nconst styles = require('./styles.module.css');\n\nconst Divider = () => (\n  <span className={styles.divider}>\n    <span className={styles.topDot} />\n    <span className={styles.bottomDot} />\n  </span>\n);\n\nexport default Divider;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Digit from '../Digit';\nimport Divider from '../ClockDivider';\n\nconst styles = require('./styles.module.css');\n\nconst Timer = (props) => {\n  let minutes = Math.floor(props.seconds / 60).toString();\n\n  if (minutes.length === 1) {\n    minutes = `0${minutes}`;\n  }\n\n  let seconds = (props.seconds % 60).toString();\n\n  if (seconds.length === 1) {\n    seconds = `0${seconds}`;\n  }\n\n  const numberOfDigitsInMinute = minutes.length;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.timeContainer}>\n        <p>Minutes</p>\n        <div className={styles.digitContainer}>\n          {\n            [...Array(numberOfDigitsInMinute).keys()].map(index => (\n              <Digit key={index} value={minutes[index]} />\n            ))\n          }\n        </div>\n      </div>\n      <div className={styles.divider}>\n        <Divider />\n      </div>\n      <div className={styles.timeContainer}>\n        <p>Seconds</p>\n        <div className={styles.digitContainer}>\n          <Digit value={seconds[0]} />\n          <Digit value={seconds[1]} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTimer.propTypes = {\n  seconds: PropTypes.number.isRequired,\n};\n\nexport default Timer;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TIMER_STARTED,\n  TIMER_HOLD,\n  SESSION_IN_PROGRESS,\n} from '../../actions/constants';\n\nconst styles = require('./styles.module.css');\n\nconst Label = ({ timerState, pomodoroState }) => {\n  let string = 'pomodoro';\n\n  if (timerState === TIMER_HOLD || timerState === TIMER_STARTED) {\n    string = pomodoroState === SESSION_IN_PROGRESS ? 'session' : 'break';\n  }\n\n  return (\n    <div className={`row ${styles.statRow}`}>\n      <div className={styles.stats}>\n        {string}\n      </div>\n    </div>\n  );\n};\n\nLabel.propTypes = {\n  timerState: PropTypes.string.isRequired,\n  pomodoroState: PropTypes.string.isRequired,\n};\n\nexport default Label;\n","export const UPDATE_SESSION_LENGTH = 'UPDATE_SESSION_LENGTH';\nexport const UPDATE_BREAK_LENGTH = 'UPDATE_BREAK_LENGTH';\n\nexport const START_POMODORO = 'START_POMODORO';\nexport const STOP_POMODORO = 'STOP_POMODORO';\nexport const CLEAR_POMODORO = 'CLEAR_POMODORO';\n\nexport const TIMER_NOT_STARTED = 'TIMER_NOT_STARTED';\nexport const TIMER_STARTED = 'TIMER_STARTED';\nexport const TIMER_HOLD = 'TIMER_HOLD';\nexport const TIMER_CLEARED = 'TIMER_CLEARED';\n\nexport const SESSION_IN_PROGRESS = 'SESSION_IN_PROGRESS';\nexport const BREAK_IN_PROGRESS = 'BREAK_IN_PROGRESS';\n\nexport const SWITCH_POMODORO_STATE = 'SWITCH_POMODORO_STATE';\n\nexport const UPDATE_SECONDS_REMAINING = 'UPDATE_SECONDS_REMAINING';\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = require('./styles.module.css');\n\nconst BottomActionBar = props => (\n  <div className={styles.container}>\n    <div className={`row ${styles.btns}`}>\n      <button className={`btn btn-default btn-lg ${styles.button}`} onClick={props.onStart}>\n        start\n      </button>\n      <button className={`btn btn-default btn-lg ${styles.button} ${styles.stop}`} onClick={props.onStop}>\n        stop\n      </button>\n      <button className={`btn btn-default btn-lg ${styles.button}`} onClick={props.onClear}>\n        clear\n      </button>\n    </div>\n  </div>\n);\n\nBottomActionBar.propTypes = {\n  onStart: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired,\n};\n\nexport default BottomActionBar;\n","import {\n  UPDATE_SESSION_LENGTH,\n  UPDATE_BREAK_LENGTH,\n  START_POMODORO,\n  STOP_POMODORO,\n  CLEAR_POMODORO,\n  TIMER_STARTED,\n  TIMER_HOLD,\n  TIMER_CLEARED,\n  SWITCH_POMODORO_STATE,\n  UPDATE_SECONDS_REMAINING,\n} from './constants';\n\nexport const updateSessionLength = byAmount => ({\n  type: UPDATE_SESSION_LENGTH,\n  byAmount,\n});\n\nexport const updateBreakLength = byAmount => ({\n  type: UPDATE_BREAK_LENGTH,\n  byAmount,\n});\n\nexport const startPomodoro = () => ({\n  type: START_POMODORO,\n  state: TIMER_STARTED,\n});\n\nexport const stopPomodoro = () => ({\n  type: STOP_POMODORO,\n  state: TIMER_HOLD,\n});\n\nexport const clearPomodoro = () => ({\n  type: CLEAR_POMODORO,\n  state: TIMER_CLEARED,\n});\n\nexport const switchPomodoroState = () => ({\n  type: SWITCH_POMODORO_STATE,\n});\n\nexport const updateSecondsRemaining = seconds => ({\n  type: UPDATE_SECONDS_REMAINING,\n  seconds,\n});\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Counter from './components/Counter';\nimport Timer from './components/Timer';\nimport Label from './components/Label';\nimport BottomActionBar from './components/BottomActionBar';\nimport {\n  updateBreakLength,\n  updateSessionLength,\n  startPomodoro,\n  stopPomodoro,\n  clearPomodoro,\n  switchPomodoroState,\n  updateSecondsRemaining,\n} from './actions';\nimport { TIMER_STARTED } from './actions/constants';\n\nconst styles = require('./styles.module.css');\n\nclass Pomodoro extends React.Component {\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      if (this.props.timerState === TIMER_STARTED) {\n        if (this.props.secondsRemaining === 0) {\n          this.props.switchPomodoroState();\n        } else {\n          this.props.updateSeconds(this.props.secondsRemaining - 1);\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className={styles.pomodoro}>\n        <div className={styles.counterContainer}>\n          <Counter\n            label=\"Session Length\"\n            value={this.props.sessionLength}\n            increment={this.props.incrementSessionLength}\n            decrement={this.props.decrementSessionLength}\n          />\n          <Counter\n            label=\"Break Length\"\n            value={this.props.breakLength}\n            increment={this.props.incrementBreakLength}\n            decrement={this.props.decrementBreakLength}\n          />\n        </div>\n        <Timer seconds={this.props.secondsRemaining} />\n        <Label timerState={this.props.timerState} pomodoroState={this.props.pomodoroState} />\n        <BottomActionBar\n          onStart={this.props.start}\n          onStop={this.props.stop}\n          onClear={this.props.clear}\n        />\n      </div>\n    );\n  }\n}\n\nPomodoro.propTypes = {\n  sessionLength: PropTypes.number.isRequired,\n  breakLength: PropTypes.number.isRequired,\n  timerState: PropTypes.string.isRequired,\n  pomodoroState: PropTypes.string.isRequired,\n  secondsRemaining: PropTypes.number.isRequired,\n  incrementSessionLength: PropTypes.func.isRequired,\n  decrementSessionLength: PropTypes.func.isRequired,\n  incrementBreakLength: PropTypes.func.isRequired,\n  decrementBreakLength: PropTypes.func.isRequired,\n  start: PropTypes.func.isRequired,\n  stop: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n  switchPomodoroState: PropTypes.func.isRequired,\n  updateSeconds: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  sessionLength: state.pomodoro.sessionLength,\n  breakLength: state.pomodoro.breakLength,\n  timerState: state.pomodoro.timerState,\n  pomodoroState: state.pomodoro.pomodoroState,\n  secondsRemaining: state.pomodoro.secondsRemaining,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  incrementSessionLength: () => dispatch(updateSessionLength(1)),\n  decrementSessionLength: () => dispatch(updateSessionLength(-1)),\n  incrementBreakLength: () => dispatch(updateBreakLength(1)),\n  decrementBreakLength: () => dispatch(updateBreakLength(-1)),\n  start: () => dispatch(startPomodoro()),\n  stop: () => dispatch(stopPomodoro()),\n  clear: () => dispatch(clearPomodoro()),\n  switchPomodoroState: () => dispatch(switchPomodoroState()),\n  updateSeconds: seconds => dispatch(updateSecondsRemaining(seconds)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pomodoro);\n","import * as React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport BASE_ROUTE from '../constants/Routes';\nimport App from '../containers/App';\nimport Pomodoro from '../modules/pomodoro';\n\nexport default (\n  <App>\n    <Router>\n      <Route path={BASE_ROUTE} component={Pomodoro} />\n      <Redirect from=\"/*\" to={BASE_ROUTE} />\n    </Router>\n  </App>\n);\n","const BASE_ROUTE = '/';\n\nexport default BASE_ROUTE;\n","import {\n  UPDATE_SESSION_LENGTH,\n  UPDATE_BREAK_LENGTH,\n  START_POMODORO,\n  STOP_POMODORO,\n  CLEAR_POMODORO,\n  TIMER_NOT_STARTED,\n  TIMER_CLEARED,\n  SWITCH_POMODORO_STATE,\n  UPDATE_SECONDS_REMAINING,\n  SESSION_IN_PROGRESS,\n  BREAK_IN_PROGRESS,\n} from '../actions/constants';\n\nconst initialState = {\n  sessionLength: 25,\n  breakLength: 5,\n  timerState: TIMER_NOT_STARTED,\n  pomodoroState: SESSION_IN_PROGRESS,\n  secondsRemaining: 0,\n  hasSessionValueChanged: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_SESSION_LENGTH:\n      return (state.sessionLength === 1 && action.byAmount < 0) ? state : {\n        ...state,\n        sessionLength: state.sessionLength + action.byAmount,\n        hasSessionValueChanged: true,\n      };\n    case UPDATE_BREAK_LENGTH:\n      return (state.breakLength === 1 && action.byAmount < 0) ? state : {\n        ...state,\n        breakLength: state.breakLength + action.byAmount,\n      };\n    case START_POMODORO: {\n      let secondsRemaining = state.secondsRemaining;\n      let pomodoroState = state.pomodoroState;\n\n      if (state.timerState === TIMER_CLEARED ||\n        state.timerState === TIMER_NOT_STARTED ||\n        state.hasSessionValueChanged) {\n        secondsRemaining = state.sessionLength * 60;\n        pomodoroState = SESSION_IN_PROGRESS;\n      }\n\n      return {\n        ...state,\n        timerState: action.state,\n        hasSessionValueChanged: false,\n        secondsRemaining,\n        pomodoroState,\n      };\n    }\n    case STOP_POMODORO:\n      return {\n        ...state,\n        timerState: action.state,\n      };\n    case CLEAR_POMODORO:\n      return {\n        ...state,\n        timerState: action.state,\n        secondsRemaining: 0,\n      };\n    case SWITCH_POMODORO_STATE: {\n      const pomodoroState = state.pomodoroState === SESSION_IN_PROGRESS ?\n                              BREAK_IN_PROGRESS : SESSION_IN_PROGRESS;\n\n      const secondsRemaining = (state.pomodoroState === SESSION_IN_PROGRESS ?\n                                state.breakLength : state.sessionLength) * 60;\n\n      return {\n        ...state,\n        pomodoroState,\n        secondsRemaining,\n      };\n    }\n    case UPDATE_SECONDS_REMAINING:\n      return {\n        ...state,\n        secondsRemaining: action.seconds,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport pomodoro from '../modules/pomodoro/reducer';\n\nconst reducers = {\n  pomodoro,\n};\n\nexport default combineReducers(reducers);\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware),\n);\n\nexport default store;\n","import { call } from 'redux-saga/effects';\n\nconst appStarting = () => console.log('App Starting');\n\nfunction* startup() {\n  yield call(appStarting);\n}\n\nexport default startup;\n","import { fork } from 'redux-saga/effects';\nimport { sagaMiddleware } from '../store';\nimport startup from '../modules/startup/sagas/startupSaga';\n\nfunction* root() {\n  yield fork(startup);\n}\n\nconst runRootSaga = () => sagaMiddleware.run(root);\n\nexport default runRootSaga;\n","/* global document:true */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'; import createHistory from 'history/createBrowserHistory'\nimport routes from './routes';\nimport store from './store';\nimport runRootSaga from './sagas';\n\nrunRootSaga();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={createHistory}>\n      {routes}\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}